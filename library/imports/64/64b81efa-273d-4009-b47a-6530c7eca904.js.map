{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Game.ts"],"names":[],"mappings":";;;;;AAAA,+BAA0B;AAC1B,uCAAkC;AAE5B,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAM5C,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,6DAAa,CAAA;IACb,uDAAU,CAAA;AACd,CAAC,EAHW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAGzB;AACD,IAAY,SAKX;AALD,WAAY,SAAS;IACjB,yCAAI,CAAA;IACJ,2CAAK,CAAA;IACL,qCAAE,CAAA;IACF,yCAAI,CAAA;AACR,CAAC,EALW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAKpB;AAID;IAAkC,wBAAY;IAD9C;QAAA,qEAw5BC;QAp5BG,iBAAW,GAAmB,IAAI,CAAC;QAGnC,gBAAU,GAAc,IAAI,CAAC;QAG7B,aAAO,GAAY,IAAI,CAAC;QAGxB,cAAQ,GAAa,IAAI,CAAC;QAG1B,aAAO,GAAa,IAAI,CAAC;QAGzB,gBAAU,GAAY,IAAI,CAAC;QAE3B,UAAU;QACV,UAAI,GAAY,IAAI,CAAC;QAErB,aAAO,GAAY,IAAI,CAAC,CAAC,KAAK;QAC9B,eAAS,GAAY,IAAI,CAAC,CAAA,KAAK;QAC/B,gBAAU,GAAY,IAAI,CAAC,CAAA,KAAK;QAEhC,IAAI;QACJ,YAAM,GAAW,CAAC,CAAC;QACnB,IAAI;QACJ,WAAK,GAAW,CAAC,CAAC;QAClB,OAAO;QACP,gBAAU,GAAW,CAAC,CAAC;QAEvB,SAAS;QACT,eAAS,GAAW,CAAC,CAAC;QAEtB,aAAa;QACb,WAAK,GAAgB,IAAI,CAAC;QAE1B,aAAa;QACb,YAAM,GAAgB,IAAI,CAAC;QAE3B,YAAY;QACZ,gBAAU,GAAc,SAAS,CAAC,IAAI,CAAC;QACvC,YAAM,GAAmB,cAAc,CAAC,SAAS,CAAC;QAElD,mBAAmB;QACnB,eAAS,GAAyB,IAAI,CAAC;QAEvC,WAAW;QACX,cAAQ,GAAY,KAAK,CAAC;QAE1B,SAAS;QACT,cAAQ,GAAW,CAAC,CAAC,CAAC;QAEtB,eAAS,GAAa,IAAI,CAAC;QAE3B,gBAAU,GAAY,IAAI,CAAC;;IA61B/B,CAAC;aAv5BoB,IAAI;IA8DrB,sBAAkB,gBAAQ;aAA1B;YACI,OAAO,MAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAED;;;;;OAKG;IACH,qBAAM,GAAN;QACI,MAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,kBAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,aAAa;QACb,qCAAqC;QAErC,KAAK;QACL,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACzF,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAE3F,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACrE,oEAAoE;QAEpE,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,yBAAU,GAAV;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,4BAAa,GAAb,UAAc,IAAY;QACtB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;;;;;;;;OAYG;IACH,4BAAa,GAAb,UAAc,EAAU;QACpB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,QAAQ,EAAE,EAAE;YACR,KAAK,CAAC;gBACF,UAAU,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,CAAC;gBACF,UAAU,GAAG,SAAS,CAAC;gBACvB,MAAM;YACV,KAAK,EAAE;gBACH,UAAU,GAAG,WAAW,CAAC;gBACzB,MAAM;YACV,KAAK,EAAE;gBACH,UAAU,GAAG,UAAU,CAAC;gBACxB,MAAM;YACV,KAAK,EAAE;gBACH,UAAU,GAAG,UAAU,CAAC;gBACxB,MAAM;SACb;QACD,IAAI,UAAU,IAAI,EAAE,EAAE;SAErB;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAClC;IACL,CAAC;IAED;;OAEG;IACH,8BAAe,GAAf;QACI,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAA,EAAE;YACrB,EAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YAClC,OAAO;SACV;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACpB,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACpB,OAAO;SACV;QAED,OAAO;QACP,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC;QACzD,SAAS;QACT,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,uBAAQ,GAAR;QAAA,iBA6BC;QA3BG,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;QAE1B,gCAAgC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC,CAAA,UAAU;SAC1C;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC,CAAA,UAAU;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvB,yCAAyC;gBACzC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM;gBACN,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;SACJ;QAED,IAAI,CAAC,YAAY,CAAC;YACd,WAAW;YACX,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,EAAE,GAAG,CAAC,CAAC;IAEZ,CAAC;IAED,mBAAmB;IACnB,sBAAO,GAAP,UAAQ,IAAa,EAAE,CAAS,EAAE,CAAS;QACvC,0DAA0D;QAC1D,2DAA2D;QAC3D,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACvD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,uBAAQ,GAAR;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEhC,cAAc;QACd,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACxE,KAAK,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjD,KAAK,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAEjD,iDAAiD;QACjD,iDAAiD;QACjD,iDAAiD;QACjD,iDAAiD;QACjD,0CAA0C;QAC1C,2CAA2C;QAC3C,2CAA2C;QAC3C,0CAA0C;IAC9C,CAAC;IAED;;OAEG;IACH,yBAAU,GAAV;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAC1C,CAAC;IAGD;;OAEG;IACH,oCAAqB,GAArB;QACI,SAAS;QACT,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,mCAAoB,GAApB;QAEI,SAAS;QACT,sCAAsC;IAE1C,CAAC;IAED;;OAEG;IACH,qCAAsB,GAAtB;IAGA,CAAC;IAED,uBAAQ,GAAR,UAAS,KAAK;QACV,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAA;YAC7B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;aAAM;YACH,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpB;IAEL,CAAC;IAED,yBAAU,GAAV,UAAW,KAAK;QACZ,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,0BAAW,GAAX,UAAY,KAAK;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAA;YAC7B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;aAAM;YACH,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpB;IACL,CAAC;IAED;;OAEG;IACH,kCAAmB,GAAnB,UAAoB,KAAc;QAC9B,SAAS;QACT,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA,IAAI;QACtC,IAAI,OAAO,GAAG,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAA,OAAO;QACjD,0BAA0B;QAC1B,IAAI,CAAC,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,GAAG,CAAC;YACjC,CAAC,OAAO,IAAI,CAAC,EAAE,IAAI,OAAO,IAAI,CAAE,GAAG,CAAC,EAAE;YACtC,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,SAAS,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,cAAc,CAAC,SAAS,EAAE;YACzC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE;gBAC5B,IAAI;gBACJ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;aACpC;YAED,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE;gBAC5B,IAAI;gBACJ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC;aACrC;SACJ;aAAM;YACH,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE;gBAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;aACpC;YAED,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE;gBAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,EAAE,CAAC;aAClC;SACJ;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAGD;;;OAGG;IACH,0BAAW,GAAX;QAAA,iBAqCC;QApCG,WAAW;QACX,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACtB,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,OAAO;SACV;QAED,kBAAkB;QAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,UAAU;YACV,WAAW;YACX,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM;YACN,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjC;aAAM;YACH,oBAAoB;YACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,YAAY,CAAC;YACd,MAAM;YACN,mCAAmC;YACnC,2BAA2B;YAC3B,8BAA8B;YAC9B,cAAc;YACd,0BAA0B;YAC1B,WAAW;YACX,UAAU;YACV,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI;QACR,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAED;;OAEG;IACH,uBAAQ,GAAR;QACI,mCAAmC;QACnC,QAAQ;QAER,SAAS;QAET,QAAQ;IAEZ,CAAC;IAED;;OAEG;IACH,4BAAa,GAAb;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACrC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACnC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,KAAK,EAAE,CAAC;YAC5C,IAAI,CAAC,KAAK,EAAE;gBACR,IAAI,GAAG,KAAK,CAAC;aAChB;SACJ;QACD,IAAI,IAAI,EAAE;YACN,WAAW;YACX,IAAI,UAAU,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC9C,WAAW;YACX,IAAI,UAAU,EAAE;gBACZ,IAAI,GAAG,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;KAEC;IACD,uBAAQ,GAAR;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;SAC7B;IACL,CAAC;IAGD;;;;;;OAMG;IACH,gCAAiB,GAAjB,UAAkB,IAAY;QAC1B,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,QAAQ,CAAC;QACb,IAAI,IAAI,CAAC,MAAM,IAAI,cAAc,CAAC,SAAS,EAAE;YACzC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC/B;aAAM;YACH,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAChC;QAED,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,EAAE,EAAE;YACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,KAAK,EAAE,CAAC;gBACnD,IAAI,KAAK,EAAE;oBACP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACpB;aACJ;SACJ;aAAM;YACH,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,KAAK,EAAE,CAAC;gBACnD,IAAI,KAAK,EAAE;oBACP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACpB;aACJ;SACJ;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,kBAAkB;QAClB,QAAQ;QACR,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,EAAE,EAAE;YACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,OAAO,GAAY,IAAI,CAAC;gBAC5B,IAAI,UAAU,GAAY,IAAI,CAAC;gBAE/B,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC9C,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;gBAC3B,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAE3C,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;wBAC3B,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,EAAE,CAAC;wBACvE,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,EAAE,CAAC;wBACrD,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,CAAC,EAAE;4BACjC,UAAU,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;4BACrC,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;4BACzC,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;4BAC/B,6BAA6B;4BAC7B,KAAK,EAAE,CAAC;4BACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;yBACxB;6BAAM;4BACH,UAAU,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;4BACjC,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;yBAC9B;qBACJ;iBACJ;gBACD,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;aACrD;SACJ;aAAM;YACH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,OAAO,GAAY,IAAI,CAAC;gBAC5B,IAAI,UAAU,GAAY,IAAI,CAAC;gBAE/B,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/C,IAAI,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC9C,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;gBAC3B,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAE3C,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;wBAC3B,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,EAAE,CAAC;wBACvE,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,EAAE,CAAC;wBACrD,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,CAAC,EAAE;4BAEjC,wCAAwC;4BACxC,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;4BACnD,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;4BACzC,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;4BAC/B,KAAK,EAAE,CAAC;4BACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;yBACxB;6BAAM;4BACH,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;4BACvD,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;yBAC9B;qBACJ;iBACJ;gBACD,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,UAAU;IACV,4BAAa,GAAb;QACI,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,kBAAkB;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,IAAI,EAAE;oBACnC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;wBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC1E,IAAI,QAAQ,EAAE;4BACV,IAAI,GAAG,IAAI,CAAC;yBACf;qBACJ;iBACJ;qBAAM,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,KAAK,EAAE;oBAC3C,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;wBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAChH,IAAI,QAAQ,EAAE;4BACV,IAAI,GAAG,IAAI,CAAC;yBACf;qBACJ;iBACJ;qBAAM,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,EAAE,EAAE;oBACxC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;wBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5E,IAAI,QAAQ,EAAE;4BACV,IAAI,GAAG,IAAI,CAAC;yBACf;qBACJ;iBACJ;qBAAM,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,IAAI,EAAE;oBAC1C,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;wBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAClH,IAAI,QAAQ,EAAE;4BACV,IAAI,GAAG,IAAI,CAAC;yBACf;qBACJ;iBACJ;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oCAAqB,GAArB;QACI,kBAAkB;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC/E,IAAI,QAAQ,EAAE;wBACV,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrH,IAAI,QAAQ,EAAE;wBACV,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjF,IAAI,QAAQ,EAAE;wBACV,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;oBACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvH,IAAI,QAAQ,EAAE;wBACV,OAAO,IAAI,CAAC;qBACf;iBACJ;aACJ;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,iBAAiB;IACjB,+BAAgB,GAAhB;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QAErC,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACnC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,KAAK,EAAE,CAAC;YAC5C,IAAI,CAAC,KAAK,EAAE;gBACR,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;SACJ;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAE9B,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO;SACV;QAED,QAAQ;QACR,4BAA4B;QAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,WAAW;IACf,CAAC;IAED,MAAM;IACN,YAAY;IACZ,0BAA0B;IAC1B,mBAAmB;IACnB,MAAM;IACN,8CAA8C;IAC9C,oCAAoC;IACpC,cAAc;IACd,uCAAuC;IACvC,kCAAkC;IAElC,+CAA+C;IAC/C,sDAAsD;IACtD,kEAAkE;IAClE,2BAA2B;IAC3B,oCAAoC;IACpC,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,2DAA2D;IAC3D,kEAAkE;IAClE,2BAA2B;IAC3B,oCAAoC;IACpC,gBAAgB;IAChB,YAAY;IACZ,QAAQ;IAER,qBAAqB;IACrB,yBAAyB;IACzB,eAAe;IAEf,+CAA+C;IAC/C,sDAAsD;IACtD,2CAA2C;IAC3C,8CAA8C;IAE9C,+CAA+C;IAC/C,wCAAwC;IACxC,6DAA6D;IAC7D,0CAA0C;IAC1C,0DAA0D;IAE1D,2BAA2B;IAC3B,mDAAmD;IACnD,8FAA8F;IAC9F,4EAA4E;IAC5E,6DAA6D;IAC7D,gEAAgE;IAChE,oEAAoE;IACpE,0DAA0D;IAC1D,mCAAmC;IACnC,+BAA+B;IAC/B,4DAA4D;IAC5D,wBAAwB;IACxB,oBAAoB;IACpB,gBAAgB;IAChB,iEAAiE;IACjE,YAAY;IACZ,eAAe;IACf,sDAAsD;IACtD,2CAA2C;IAC3C,8CAA8C;IAE9C,+CAA+C;IAC/C,8DAA8D;IAC9D,6DAA6D;IAC7D,0CAA0C;IAC1C,0DAA0D;IAE1D,2BAA2B;IAC3B,mDAAmD;IACnD,8FAA8F;IAC9F,4EAA4E;IAC5E,6DAA6D;IAC7D,mEAAmE;IACnE,8EAA8E;IAC9E,oEAAoE;IACpE,0DAA0D;IAC1D,mCAAmC;IACnC,+BAA+B;IAC/B,kFAAkF;IAClF,wBAAwB;IACxB,oBAAoB;IACpB,gBAAgB;IAChB,iEAAiE;IACjE,YAAY;IACZ,QAAQ;IACR,IAAI;IAEJ,MAAM;IACN,UAAU;IACV,0BAA0B;IAC1B,MAAM;IACN,2CAA2C;IAC3C,mCAAmC;IACnC,cAAc;IACd,sCAAsC;IACtC,kCAAkC;IAClC,iDAAiD;IACjD,6DAA6D;IAC7D,uBAAuB;IACvB,gCAAgC;IAChC,YAAY;IACZ,QAAQ;IAER,yBAAyB;IACzB,eAAe;IACf,kDAAkD;IAClD,uCAAuC;IACvC,uEAAuE;IACvE,0CAA0C;IAE1C,iDAAiD;IACjD,6EAA6E;IAC7E,gEAAgE;IAEhE,8CAA8C;IAC9C,6DAA6D;IAC7D,+DAA+D;IAC/D,wDAAwD;IACxD,4CAA4C;IAC5C,uCAAuC;IACvC,uCAAuC;IACvC,wDAAwD;IACxD,0DAA0D;IAC1D,mGAAmG;IACnG,qFAAqF;IAErF,oEAAoE;IACpE,6DAA6D;IAC7D,uCAAuC;IACvC,+DAA+D;IAC/D,wDAAwD;IACxD,4CAA4C;IAC5C,4DAA4D;IAC5D,wDAAwD;IACxD,YAAY;IAEZ,4CAA4C;IAC5C,gEAAgE;IAChE,+CAA+C;IAC/C,2DAA2D;IAC3D,QAAQ;IAER,gBAAgB;IAChB,oDAAoD;IACpD,oDAAoD;IACpD,gDAAgD;IAChD,kEAAkE;IAClE,mBAAmB;IACnB,6DAA6D;IAC7D,6DAA6D;IAC7D,kEAAkE;IAClE,mBAAmB;IACnB,eAAe;IACf,WAAW;IACX,IAAI;IAEJ;;OAEG;IACH,2BAAY,GAAZ;QACI,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,6BAAc,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACrD,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,iCAAkB,GAAlB,UAAmB,GAAY,EAAE,GAAY;QACzC,IAAI,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC;QACnC,IAAI,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,OAAO,IAAI,OAAO,EAAE;YACpB,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,OAAO,IAAI,CAAC;aACf;SACJ;aAAM,IAAI,CAAC,OAAO,IAAI,OAAO,EAAE;YAC5B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,4BAAa,GAAb,UAAc,GAAY,EAAE,GAAY;QACpC,IAAI,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC;QACnC,IAAI,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC;QAEnC,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAE5B,IAAI,OAAO,IAAI,OAAO,EAAE;YACpB,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,MAAM;gBACN,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACpB,4DAA4D;gBAC5D,iDAAiD;gBACjD,qCAAqC;gBACrC,8BAA8B;gBAC9B,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;gBACzB,qCAAqC;gBACrC,QAAQ;gBACR,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;gBACpB,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBACrB,KAAK,CAAC,YAAY,EAAE,CAAC;gBACrB,OAAO,IAAI,CAAC;aACf;SACJ;aAAM,IAAI,CAAC,OAAO,IAAI,OAAO,EAAE;YAC5B,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YACzB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACtB,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;aAAM;YACH,4BAA4B;YAC5B,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,iCAAkB,GAAlB,UAAmB,OAAgB,EAAE,UAAmB,EAAE,GAAG;QAA7D,iBAyBC;QAxBG,OAAO,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,SAAS,GAAY,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzD,SAAS,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC7C,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjC,IAAI,OAAO,CAAC;QACZ,IAAI,IAAI,CAAC,MAAM,IAAI,cAAc,CAAC,SAAS,EAAE;YACzC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;SACrF;aAAM;YACH,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;SACrF;QAED,IAAI,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClD,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,QAAQ,CAAC;YACjD,IAAI,UAAU,CAAC,OAAO,EAAE;gBACpB,UAAU,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBACxE,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;aAC9B;iBAAM;gBACH,UAAU,CAAC,YAAY,CAAC,cAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACrE;YACD,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YACpC,SAAS,CAAC,gBAAgB,EAAE,CAAC;YAC7B,SAAS,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACH,wBAAS,GAAT;QACI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,2BAAY,GAAZ;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAz1Bc,cAAS,GAAS,IAAI,CAAC;IAzDtC;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;6CACU;IAGnC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;4CACS;IAG7B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;yCACM;IAGxB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0CACO;IAG1B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;yCACM;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4CACS;IAlBV,IAAI;QADxB,OAAO;OACa,IAAI,CAu5BxB;IAAD,WAAC;;CAv5BD,AAu5BC,CAv5BiC,EAAE,CAAC,SAAS,GAu5B7C;kBAv5BoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import Item from \"./Item\";\r\nimport AudioMgr from \"./AudioMgr\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nexport interface locationInfo {\r\n    l: number;   //行数\r\n    r: number;   //列数\r\n}\r\n\r\nexport enum slideDirection {\r\n    LeftRight = 1,\r\n    UpDown = 2,\r\n}\r\nexport enum direction {\r\n    left,\r\n    right,\r\n    up,\r\n    down,\r\n}\r\n\r\n\r\n@ccclass\r\nexport default class Game extends cc.Component {\r\n\r\n    @property(cc.SpriteAtlas)\r\n    numberAtlas: cc.SpriteAtlas = null;\r\n\r\n    @property(cc.Prefab)\r\n    squareItem: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    scoreLab: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    stepLab: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    effectNode: cc.Node = null;\r\n\r\n    //上一次触摸点位置\r\n    _pos: cc.Vec2 = null;\r\n\r\n    _endPos: cc.Vec2 = null; //结束点\r\n    _startPos: cc.Vec2 = null;//开始点\r\n    _cancelPos: cc.Vec2 = null;//取消点\r\n\r\n    //分数\r\n    _score: number = 0;\r\n    //步数\r\n    _step: number = 0;\r\n    //合并的步数\r\n    _mergeStep: number = 0;\r\n\r\n    //每一行的格子数\r\n    squareNum: number = 4;\r\n\r\n    //格子的二维数组  横向\r\n    _sqrt: cc.Node[][] = null;\r\n\r\n    //格子的二维数组  竖向\r\n    _sqrt2: cc.Node[][] = null;\r\n\r\n    //滑动方向 默认向左划\r\n    _direction: direction = direction.left;\r\n    _slide: slideDirection = slideDirection.LeftRight;\r\n\r\n    //当前龙骨动画的armature对象\r\n    _armature: dragonBones.Armature = null;\r\n\r\n    //本次是否进行过合并\r\n    _isMerge: boolean = false;\r\n\r\n    //播放音效的ID\r\n    _audioID: number = -1;\r\n\r\n    _AudioMgr: AudioMgr = null;\r\n\r\n    _clickFlag: boolean = true;\r\n\r\n    private static _instance: Game = null;\r\n\r\n    public static get instance(): Game {\r\n        return Game._instance;\r\n    }\r\n\r\n    /**\r\n     * 2048 小方块\r\n     * 每一步都出现一个方块 2 \r\n     * 游戏开始 有两个随机数字 (2,4)或(2,2)\r\n     * 2,4,8,16,32,64,128,256,512,1024,2048\r\n     */\r\n    onLoad() {\r\n        Game._instance = this;\r\n        this._AudioMgr = new AudioMgr();\r\n        this._AudioMgr.StopBGM();\r\n        //大厅是不播放背景音乐的\r\n        // this._AudioMgr.playBGM(\"BGM.mp3\");\r\n\r\n        //初始化\r\n        this.initGame();\r\n\r\n        this.content.width = this._sqrt[0][0].width * this.squareNum + (this.squareNum + 1) * 20;\r\n        this.content.height = this._sqrt[0][0].height * this.squareNum + (this.squareNum + 1) * 20;\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);\r\n        // this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n\r\n        this.initEffect();\r\n    }\r\n\r\n    /**\r\n     * 初始化特效\r\n     */\r\n    initEffect() {\r\n        let dragon = this.effectNode.getComponent(dragonBones.ArmatureDisplay);\r\n        this._armature = dragon.armature();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 根据名称播放指定特效\r\n     */\r\n    setEffectNode(name: string) {\r\n        this._armature.animation.fadeIn(name, -1, -1, 0, \"normal\");\r\n    }\r\n\r\n    /**\r\n     * 根据id获取特效名称\r\n     * dtongguan1\r\n     * dbgood\r\n     * dbgreat\r\n     * dbperfect\r\n     * dbunbele\r\n     * damazing\r\n     * dbnandu\r\n     * dbkaishi\r\n     * looding\r\n     * 设置特性\r\n     */\r\n    setEffectName(id: number) {\r\n        let effectName = \"\";\r\n        switch (id) {\r\n            case 8:\r\n                effectName = \"dbgood\";\r\n                break;\r\n            case 9:\r\n                effectName = \"dbgreat\";\r\n                break;\r\n            case 10:\r\n                effectName = \"dbperfect\";\r\n                break;\r\n            case 11:\r\n                effectName = \"dbunbele\";\r\n                break;\r\n            case 12:\r\n                effectName = \"damazing\";\r\n                break;\r\n        }\r\n        if (effectName == \"\") {\r\n\r\n        } else {\r\n            this.setEffectNode(effectName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放特效\r\n     */\r\n    playAudioEffect() {\r\n        cc.log(\"播放特效id---->>>\", this._audioID);\r\n        if (this._audioID > 12) {\r\n            this._audioID = -1;//\r\n            cc.log(\"你太牛逼了..连销12个..厉害了，从0继续吧\");\r\n            return;\r\n        }\r\n        if (this._audioID <= 0) {\r\n            cc.log(\"下一次就有声音了哦\");\r\n            return;\r\n        }\r\n\r\n        //播放 特效\r\n        this.setEffectName(this._audioID);\r\n        this._AudioMgr.playSFX(\"audio\" + this._audioID + \".ogg\");\r\n        //设置合并的步数\r\n        this._mergeStep++;\r\n    }\r\n\r\n    initGame() {\r\n\r\n        this._sqrt = new Array();\r\n        this._sqrt2 = new Array();\r\n\r\n        //多维数组不能直接定义多维，只能层层定义，很多高级语言都是如此\r\n        for (let i = 0; i < this.squareNum; i++) {\r\n            this._sqrt2[i] = new Array();//多维数组层层定义\r\n        }\r\n\r\n        for (let i = 0; i < this.squareNum; i++) {\r\n            this._sqrt[i] = new Array();//多维数组层层定义\r\n            for (let j = 0; j < this.squareNum; j++) {\r\n                let item = cc.instantiate(this.squareItem);\r\n                item.name = i + \"\" + j;\r\n                // item.getComponent(Item).showNumber(2);\r\n                this._sqrt[i][j] = item;\r\n                this._sqrt2[j][i] = item;\r\n                this.content.addChild(item);\r\n                //计算位置\r\n                this.initPos(item, i, j);\r\n            }\r\n        }\r\n\r\n        this.scheduleOnce(() => {\r\n            //随机两个存在的数字\r\n            this.initGrid();\r\n        }, 0.2);\r\n\r\n    }\r\n\r\n    //初始化位置 ，不用layout组件\r\n    initPos(item: cc.Node, i: number, j: number) {\r\n        // let x = item.width * i + item.width / 2 + (i + 1) * 20;\r\n        // let y = item.height * j + item.width / 2 + (j + 1) * 20;\r\n        let x = item.width * j + item.width / 2 + (j + 1) * 20;\r\n        let y = item.height * i + item.width / 2 + (i + 1) * 20 + 20;\r\n        item.position = cc.v2(x, -y);\r\n    }\r\n\r\n    initGrid() {\r\n        let location1 = this.randomLocation();\r\n        let location2 = this.randomLocation();\r\n        let grid1 = this.randomNumber();\r\n        let grid2 = this.randomNumber();\r\n\r\n        //获取随机到的两个数的节点\r\n        let item1 = this.content.getChildByName(location1.l + \"\" + location1.r);\r\n        let item2 = this.content.getChildByName(location2.l + \"\" + location2.r);\r\n        item1.getComponent(Item).showNumber(grid1, true);\r\n        item2.getComponent(Item).showNumber(grid2, true);\r\n\r\n        // let item0 = this.content.getChildByName(\"00\");\r\n        // let item1 = this.content.getChildByName(\"01\");\r\n        // let item2 = this.content.getChildByName(\"02\");\r\n        // let item3 = this.content.getChildByName(\"03\");\r\n        // item0.getComponent(Item).showNumber(4);\r\n        // item1.getComponent(Item).showNumber(16);\r\n        // item2.getComponent(Item).showNumber(16);\r\n        // item3.getComponent(Item).showNumber(4);\r\n    }\r\n\r\n    /**\r\n     * 设置面板信息\r\n     */\r\n    setLabInfo() {\r\n        this.scoreLab.string = this._score + \"\";\r\n        this.stepLab.string = this._step + \"\";\r\n    }\r\n\r\n\r\n    /**\r\n     * 每一次移动之前都会触发的事件\r\n     */\r\n    everyTimeMoveCallback() {\r\n        //播放滑动的视频\r\n        this._AudioMgr.playSFX(\"move.ogg\");\r\n    }\r\n\r\n    /**\r\n     * 每一次移动之后都会触发的事件\r\n     */\r\n    everyTimeEndCallback() {\r\n\r\n        //播放滑动的视频\r\n        // this._AudioMgr.playSFX(\"move.ogg\");\r\n\r\n    }\r\n\r\n    /**\r\n     * 每次合并都会触发的事件\r\n     */\r\n    everyTimeMergeCallBack() {\r\n\r\n\r\n    }\r\n\r\n    touchEnd(event) {\r\n        if (this._clickFlag) {\r\n            this._clickFlag = false;\r\n            let pos = event.getLocation()\r\n            this._endPos = cc.v2(pos.x, pos.y);\r\n            this.everyTimeMoveCallback();\r\n            this.checkSlideDirection(this._endPos);\r\n            this._step++;\r\n            this.setLabInfo();\r\n        } else {\r\n            cc.log(\"你点的太快了\");\r\n        }\r\n\r\n    }\r\n\r\n    touchStart(event) {\r\n        let pos = event.getLocation()\r\n        this._startPos = cc.v2(pos.x, pos.y);\r\n    }\r\n\r\n    touchCancel(event) {\r\n        if (this._clickFlag) {\r\n            this._clickFlag = false;\r\n            let pos = event.getLocation()\r\n            this._cancelPos = cc.v2(pos.x, pos.y);\r\n            this.everyTimeMoveCallback();\r\n            this.checkSlideDirection(this._cancelPos);\r\n            this._step++;\r\n            this.setLabInfo();\r\n        } else {\r\n            cc.log(\"你点的太快了\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测滑动方向\r\n     */\r\n    checkSlideDirection(point: cc.Vec2) {\r\n        //计算滑动的角度\r\n        let subVect = cc.pSub(this._startPos, point);\r\n        let radian = cc.pToAngle(subVect);//弧度\r\n        let degrees = cc.radiansToDegrees(radian);//弧度转度数\r\n        // degrees = 90 - degrees;\r\n        if ((degrees >= 45 && degrees <= 135) ||\r\n            (degrees <= -45 && degrees >= - 135)) {\r\n            this._slide = slideDirection.UpDown;\r\n        } else {\r\n            this._slide = slideDirection.LeftRight;\r\n        }\r\n\r\n        if (this._slide == slideDirection.LeftRight) {\r\n            if (this._startPos.x > point.x) {\r\n                //左滑\r\n                this._direction = direction.left;\r\n            }\r\n\r\n            if (this._startPos.x < point.x) {\r\n                //右滑\r\n                this._direction = direction.right;\r\n            }\r\n        } else {\r\n            if (this._startPos.y > point.y) {\r\n                this._direction = direction.down;\r\n            }\r\n\r\n            if (this._startPos.y < point.y) {\r\n                this._direction = direction.up;\r\n            }\r\n        }\r\n\r\n        this.slideSquare();\r\n    }\r\n\r\n\r\n    /**\r\n     * 滑动\r\n     * @param sd  滑动方向\r\n     */\r\n    slideSquare() {\r\n        //判断游戏是否该结束\r\n        if (this.checkGameOver()) {\r\n            cc.log(\"游戏结束\");\r\n            this.gameOver();\r\n            return;\r\n        }\r\n\r\n        //移动位置  所有块往一个方向移动\r\n        this.moveSqrt();\r\n        this.everyTimeEndCallback();\r\n\r\n        if (this._isMerge) {\r\n            //本次有合并成功的\r\n            //   音效id++\r\n            this._audioID++;\r\n            //播放音效\r\n            this.playAudioEffect();\r\n            this.everyTimeMergeCallBack();\r\n        } else {\r\n            //本次没有合并成功的..音效id从开始\r\n            this._audioID = -1;\r\n        }\r\n        this._isMerge = false;\r\n\r\n        this.scheduleOnce(() => {\r\n            //检测合并\r\n            // let flag = this.checkAllMerge();\r\n            // this.randomSqrtInNULL();\r\n            // cc.log(\"flag--->>>\", flag);\r\n            // if (flag) {\r\n            //     this.slideSquare();\r\n            // } else {\r\n            //随机生成 数字块\r\n            this.randomSqrtInNULL();\r\n            // }\r\n        }, 0.2);\r\n    }\r\n\r\n    /**\r\n     * 游戏结束\r\n     */\r\n    gameOver() {\r\n        // this.gameOverNode.active = true;\r\n        // this.\r\n\r\n        //设置分数和步数\r\n\r\n        //重新开始按钮\r\n\r\n    }\r\n\r\n    /**\r\n     * 检查游戏是否结束\r\n     */\r\n    checkGameOver() {\r\n        let len = this.content.childrenCount;\r\n        let flag = true;\r\n        for (let i = 0; i < len; i++) {\r\n            let item = this.content.children[i]\r\n            let isNum = item.getComponent(Item).isNum();\r\n            if (!isNum) {\r\n                flag = false;\r\n            }\r\n        }\r\n        if (flag) {\r\n            //检测是否能进行合并\r\n            let isGameOver = this.checkGameOverAllMerge();\r\n            //还可以继续消除合并\r\n            if (isGameOver) {\r\n                flag = false;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n   * 将所有块往一个方向移动\r\n   */\r\n    moveSqrt() {\r\n        for (let i = 0; i < this.squareNum; i++) {\r\n            this.calcSlidePosition(i);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 计算块的滑动\r\n     * @param line  行/列\r\n     * \r\n     * 主要移动和合并的逻辑判断\r\n     * 9/13 修改\r\n     */\r\n    calcSlidePosition(line: number) {\r\n        let flagList = new Array();\r\n        let lineList;\r\n        if (this._slide == slideDirection.LeftRight) {\r\n            lineList = this._sqrt[line];\r\n        } else {\r\n            lineList = this._sqrt2[line];\r\n        }\r\n\r\n        if (this._direction == direction.left || this._direction == direction.up) {\r\n            for (let i = 0; i < lineList.length; i++) {\r\n                let isNum = lineList[i].getComponent(Item).isNum();\r\n                if (isNum) {\r\n                    flagList.push(i);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = lineList.length - 1; i >= 0; i--) {\r\n                let isNum = lineList[i].getComponent(Item).isNum();\r\n                if (isNum) {\r\n                    flagList.push(i);\r\n                }\r\n            }\r\n        }\r\n\r\n        let index = 0;\r\n        //从左0开始依次把数字块 按顺序排\r\n        //根据方向排列\r\n        if (this._direction == direction.left || this._direction == direction.up) {\r\n            for (let i = 0; i < flagList.length; i++) {\r\n                let oldNode: cc.Node = null;\r\n                let targetNode: cc.Node = null;\r\n\r\n                oldNode = lineList[flagList[i]];\r\n                targetNode = lineList[i];\r\n                let num = oldNode.getComponent(Item).getNum();\r\n                targetNode.name = num + \"\";\r\n                oldNode.getComponent(Item).setHideNum(num);\r\n\r\n                if (i > 0) {\r\n                    if (lineList[flagList[i - 1]]) {\r\n                        let preNum = lineList[flagList[i - 1]].getComponent(Item).getHideNum();\r\n                        let curNum = oldNode.getComponent(Item).getHideNum();\r\n                        if (preNum == curNum && curNum != 0) {\r\n                            targetNode = lineList[i - 1 - index];\r\n                            oldNode.getComponent(Item).setHideNum(0);\r\n                            targetNode.name = num * 2 + \"\";\r\n                            // targetNode.isMerge = true;\r\n                            index++;\r\n                            this._isMerge = true;\r\n                        } else {\r\n                            targetNode = lineList[i - index];\r\n                            targetNode.name = num + \"\";\r\n                        }\r\n                    }\r\n                }\r\n                this.positionMoveAction(oldNode, targetNode, num);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < flagList.length; i++) {\r\n                let oldNode: cc.Node = null;\r\n                let targetNode: cc.Node = null;\r\n\r\n                oldNode = lineList[flagList[i]];\r\n                targetNode = lineList[lineList.length - i - 1];\r\n                let num = oldNode.getComponent(Item).getNum();\r\n                targetNode.name = num + \"\";\r\n                oldNode.getComponent(Item).setHideNum(num);\r\n\r\n                if (i > 0) {\r\n                    if (lineList[flagList[i - 1]]) {\r\n                        let preNum = lineList[flagList[i - 1]].getComponent(Item).getHideNum();\r\n                        let curNum = oldNode.getComponent(Item).getHideNum();\r\n                        if (preNum == curNum && curNum != 0) {\r\n\r\n                            // targetNode = lineList[i - 1 - index];\r\n                            targetNode = lineList[lineList.length - i + index];\r\n                            oldNode.getComponent(Item).setHideNum(0);\r\n                            targetNode.name = num * 2 + \"\";\r\n                            index++;\r\n                            this._isMerge = true;\r\n                        } else {\r\n                            targetNode = lineList[lineList.length - i + index - 1];\r\n                            targetNode.name = num + \"\";\r\n                        }\r\n                    }\r\n                }\r\n                this.positionMoveAction(oldNode, targetNode, num);\r\n            }\r\n        }\r\n    }\r\n\r\n    //检测所有的合并项\r\n    checkAllMerge() {\r\n        let flag = false;\r\n        //排完序后  在检测 相同数字合并\r\n        for (let i = 0; i < this.squareNum; i++) {\r\n            for (let j = 0; j < this.squareNum; j++) {\r\n                if (this._direction == direction.left) {\r\n                    if (j < this.squareNum - 1) {\r\n                        let isModify = this.checkTwoMerge(this._sqrt[i][j], this._sqrt[i][j + 1]);\r\n                        if (isModify) {\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                } else if (this._direction == direction.right) {\r\n                    if (j < this.squareNum - 1) {\r\n                        let isModify = this.checkTwoMerge(this._sqrt[i][this.squareNum - j - 1], this._sqrt[i][this.squareNum - j - 2]);\r\n                        if (isModify) {\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                } else if (this._direction == direction.up) {\r\n                    if (j < this.squareNum - 1) {\r\n                        let isModify = this.checkTwoMerge(this._sqrt2[i][j], this._sqrt2[i][j + 1]);\r\n                        if (isModify) {\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                } else if (this._direction == direction.down) {\r\n                    if (j < this.squareNum - 1) {\r\n                        let isModify = this.checkTwoMerge(this._sqrt2[i][this.squareNum - j - 1], this._sqrt2[i][this.squareNum - j - 2]);\r\n                        if (isModify) {\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    checkGameOverAllMerge() {\r\n        //排完序后  在检测 相同数字合并\r\n        for (let i = 0; i < this.squareNum; i++) {\r\n            for (let j = 0; j < this.squareNum; j++) {\r\n                if (j < this.squareNum - 1) {\r\n                    let isModify = this.checkTwoCanBeMerge(this._sqrt[i][j], this._sqrt[i][j + 1]);\r\n                    if (isModify) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (j < this.squareNum - 1) {\r\n                    let isModify = this.checkTwoCanBeMerge(this._sqrt[i][this.squareNum - j - 1], this._sqrt[i][this.squareNum - j - 2]);\r\n                    if (isModify) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (j < this.squareNum - 1) {\r\n                    let isModify = this.checkTwoCanBeMerge(this._sqrt2[i][j], this._sqrt2[i][j + 1]);\r\n                    if (isModify) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (j < this.squareNum - 1) {\r\n                    let isModify = this.checkTwoCanBeMerge(this._sqrt2[i][this.squareNum - j - 1], this._sqrt2[i][this.squareNum - j - 2]);\r\n                    if (isModify) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //在空白块中随机生成一个 数字块\r\n    randomSqrtInNULL() {\r\n        let len = this.content.childrenCount;\r\n\r\n        let nullList = new Array();\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let item = this.content.children[i]\r\n            let isNum = item.getComponent(Item).isNum();\r\n            if (!isNum) {\r\n                nullList.push(item);\r\n            }\r\n        }\r\n        let index = Math.floor(Math.random() * nullList.length);\r\n        let num = this.randomNumber();\r\n\r\n        if (nullList.length == 0) {\r\n            this._clickFlag = true;\r\n            return;\r\n        }\r\n\r\n        //延迟0.2s\r\n        // this.scheduleOnce(() => {\r\n        nullList[index].getComponent(Item).showNumber(num, true);\r\n        this._clickFlag = true;\r\n        // }, 0.3);\r\n    }\r\n\r\n    // /**\r\n    //  * 计算水平滑动\r\n    //  * 计算一行内所有数字块的位置,并进行 移动\r\n    //  * @param line 行\r\n    //  */\r\n    // calcHorizontalSlidePosition(line: number) {\r\n    //     this.calcSlidePosition(line);\r\n    //     return;\r\n    //     let lineList = this._sqrt[line];\r\n    //     let flagList = new Array();\r\n\r\n    //     if (this._direction == direction.left) {\r\n    //         for (let i = 0; i < lineList.length; i++) {\r\n    //             let isNum = lineList[i].getComponent(Item).isNum();\r\n    //             if (isNum) {\r\n    //                 flagList.push(i);\r\n    //             }\r\n    //         }\r\n    //     } else {\r\n    //         for (let i = lineList.length - 1; i >= 0; i--) {\r\n    //             let isNum = lineList[i].getComponent(Item).isNum();\r\n    //             if (isNum) {\r\n    //                 flagList.push(i);\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     let index = 0;\r\n    //     //从左0开始依次把数字块 按顺序排\r\n    //     //根据方向排列\r\n\r\n    //     if (this._direction == direction.left) {\r\n    //         for (let i = 0; i < flagList.length; i++) {\r\n    //             let oldNode: cc.Node = null;\r\n    //             let targetNode: cc.Node = null;\r\n\r\n    //             oldNode = lineList[flagList[i]];\r\n    //             targetNode = lineList[i];\r\n    //             let num = oldNode.getComponent(Item).getNum();\r\n    //             targetNode.name = num + \"\";\r\n    //             oldNode.getComponent(Item).setHideNum(num);\r\n\r\n    //             if (i > 0) {\r\n    //                 if (lineList[flagList[i - 1]]) {\r\n    //                     let preNum = lineList[flagList[i - 1]].getComponent(Item).getHideNum();\r\n    //                     let curNum = oldNode.getComponent(Item).getHideNum();\r\n    //                     if (preNum == curNum && curNum != 0) {\r\n    //                         targetNode = lineList[i - 1 - index];\r\n    //                         oldNode.getComponent(Item).setHideNum(0);\r\n    //                         targetNode.name = num * 2 + \"\";\r\n    //                         index++;\r\n    //                     } else {\r\n    //                         targetNode = lineList[i - index];\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //             this.positionMoveAction(oldNode, targetNode, num);\r\n    //         }\r\n    //     } else {\r\n    //         for (let i = 0; i < flagList.length; i++) {\r\n    //             let oldNode: cc.Node = null;\r\n    //             let targetNode: cc.Node = null;\r\n\r\n    //             oldNode = lineList[flagList[i]];\r\n    //             targetNode = lineList[lineList.length - i - 1];\r\n    //             let num = oldNode.getComponent(Item).getNum();\r\n    //             targetNode.name = num + \"\";\r\n    //             oldNode.getComponent(Item).setHideNum(num);\r\n\r\n    //             if (i > 0) {\r\n    //                 if (lineList[flagList[i - 1]]) {\r\n    //                     let preNum = lineList[flagList[i - 1]].getComponent(Item).getHideNum();\r\n    //                     let curNum = oldNode.getComponent(Item).getHideNum();\r\n    //                     if (preNum == curNum && curNum != 0) {\r\n    //                         // targetNode = lineList[i - 1 - index];\r\n    //                         targetNode = lineList[lineList.length - i + index];\r\n    //                         oldNode.getComponent(Item).setHideNum(0);\r\n    //                         targetNode.name = num * 2 + \"\";\r\n    //                         index++;\r\n    //                     } else {\r\n    //                         targetNode = lineList[lineList.length - i + index - 1];\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //             this.positionMoveAction(oldNode, targetNode, num);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // /**\r\n    //  * 竖直滑动\r\n    //  * 计算一列内所有数字块的位置,并进行 移动\r\n    //  */\r\n    // calcVerticalSlidePosition(row: number) {\r\n    //     this.calcSlidePosition(row);\r\n    //     return;\r\n    //     let rowList = this._sqrt2[row];\r\n    //     let flagList = new Array();\r\n    //     for (let i = 0; i < rowList.length; i++) {\r\n    //         let isNum = rowList[i].getComponent(Item).isNum();\r\n    //         if (isNum) {\r\n    //             flagList.push(i);\r\n    //         }\r\n    //     }\r\n\r\n    //     //从左0开始依次把数字块 按顺序排\r\n    //     //根据方向排列\r\n    //     for (let i = 0; i < flagList.length; i++) {\r\n    //         let oldNode: cc.Node = null;\r\n    //         // let cloneNode: cc.Node = cc.instantiate(this.squareItem);\r\n    //         let targetNode: cc.Node = null;\r\n\r\n    //         if (this._direction == direction.up) {\r\n    //             // let num = rowList[flagList[i]].getComponent(Item).getNum();\r\n    //             // rowList[i].getComponent(Item).showNumber(num);\r\n\r\n    //             oldNode = rowList[flagList[i]];\r\n    //             let num = oldNode.getComponent(Item).getNum();\r\n    //             // cloneNode.getComponent(Item).showNumber(num);\r\n    //             // cloneNode.position = oldNode.position;\r\n    //             // cloneNode.name = num + \"\";\r\n    //             oldNode.name = num + \"\";\r\n    //             targetNode = rowList[i];\r\n    //             oldNode.getComponent(Item).showNumber(0);\r\n    //         } else if (this._direction == direction.down) {\r\n    //             // let num = rowList[flagList[flagList.length - i - 1]].getComponent(Item).getNum();\r\n    //             // rowList[rowList.length - i - 1].getComponent(Item).showNumber(num);\r\n\r\n    //             oldNode = rowList[flagList[flagList.length - i - 1]];\r\n    //             let num = oldNode.getComponent(Item).getNum();\r\n    //             oldNode.name = num + \"\";\r\n    //             // cloneNode.getComponent(Item).showNumber(num);\r\n    //             // cloneNode.position = oldNode.position;\r\n    //             // cloneNode.name = num + \"\";\r\n    //             targetNode = rowList[rowList.length - i - 1];\r\n    //             oldNode.getComponent(Item).showNumber(0);\r\n    //         }\r\n\r\n    //         //A克隆一个节点A1,然后把节点A置空,然后移动到指定节点B位置\r\n    //         // cloneNode = cc.instantiate(lineList[flagList[i]]);\r\n    //         // this.content.addChild(cloneNode);\r\n    //         // this.positionMoveAction(oldNode, targetNode);\r\n    //     }\r\n\r\n    //     //置空 之前的块\r\n    //     // for (let i = 0; i < rowList.length; i++) {\r\n    //     //     if (this._direction == direction.up) {\r\n    //     //         if (i > flagList.length - 1) {\r\n    //     //             rowList[i].getComponent(Item).showNumber(0);\r\n    //     //         }\r\n    //     //     } else if (this._direction == direction.down) {\r\n    //     //         if (i < rowList.length - flagList.length) {\r\n    //     //             rowList[i].getComponent(Item).showNumber(0);\r\n    //     //         }\r\n    //     //     }\r\n    //     // }\r\n    // }\r\n\r\n    /**\r\n     * 随机一个数字  2/4\r\n     */\r\n    randomNumber(): number {\r\n        return Math.random() < 0.8 ? 2 : 4;\r\n    }\r\n\r\n    /**\r\n     * 随机获取一个位置\r\n     */\r\n    randomLocation(): locationInfo {\r\n        let line = Math.floor(Math.random() * this.squareNum);\r\n        let row = Math.floor(Math.random() * this.squareNum);\r\n        return { l: line, r: row };\r\n    }\r\n\r\n    /**\r\n     * 是否能合并  并不合并\r\n     */\r\n    checkTwoCanBeMerge(one: cc.Node, two: cc.Node) {\r\n        let item1 = one.getComponent(Item);\r\n        let item2 = two.getComponent(Item);\r\n        let oneFlag = item1.isNum();\r\n        let twoFlag = item2.isNum();\r\n        if (oneFlag && twoFlag) {\r\n            let num1 = item1.getNum();\r\n            let num2 = item2.getNum();\r\n            if (num1 == num2) {\r\n                return true;\r\n            }\r\n        } else if (!oneFlag && twoFlag) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 检测两个合并   能合并就合并\r\n     */\r\n    checkTwoMerge(one: cc.Node, two: cc.Node): boolean {\r\n        let item1 = one.getComponent(Item);\r\n        let item2 = two.getComponent(Item);\r\n\r\n        let oneFlag = item1.isNum();\r\n        let twoFlag = item2.isNum();\r\n\r\n        if (oneFlag && twoFlag) {\r\n            let num1 = item1.getNum();\r\n            let num2 = item2.getNum();\r\n            if (num1 == num2) {\r\n                //合并两个\r\n                item1.showNumber(num1 * 2);\r\n                item2.showNumber(0);\r\n                // let cloneNode: cc.Node = cc.instantiate(this.squareItem);\r\n                // cloneNode.getComponent(Item).showNumber(num2);\r\n                // cloneNode.position = two.position;\r\n                // cloneNode.name = num2 + \"\";\r\n                two.name = num2 * 2 + \"\";\r\n                // this.positionMoveAction(two, one);\r\n                //进行飞行动作\r\n                this._score += num1;\r\n                cc.log(\"合并两个--->>>\");\r\n                item1.playParticle();\r\n                return true;\r\n            }\r\n        } else if (!oneFlag && twoFlag) {\r\n            let num = item2.getNum();\r\n            item1.showNumber(num);\r\n            item2.showNumber(0);\r\n            return true;\r\n        } else {\r\n            // this._isContinue = false;\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * move动作\r\n     */\r\n    positionMoveAction(oldNode: cc.Node, targetNode: cc.Node, num) {\r\n        oldNode.getComponent(Item).showNumber(0);\r\n        let cloneNode: cc.Node = cc.instantiate(this.squareItem);\r\n        cloneNode.getComponent(Item).showNumber(num);\r\n        cloneNode.position = oldNode.position;\r\n        this.content.addChild(cloneNode);\r\n        let runTime;\r\n        if (this._slide == slideDirection.LeftRight) {\r\n            runTime = Math.floor(Math.abs(oldNode.x - targetNode.x) / cloneNode.height) * 0.1;\r\n        } else {\r\n            runTime = Math.floor(Math.abs(oldNode.y - targetNode.y) / cloneNode.height) * 0.1;\r\n        }\r\n\r\n        let moveAct = cc.moveTo(0.2, targetNode.position);\r\n        cloneNode.runAction(cc.sequence(moveAct, cc.callFunc(() => {\r\n            if (targetNode.isMerge) {\r\n                targetNode.getComponent(Item).showNumber(Number(targetNode.name), true);\r\n                targetNode.isMerge = false;\r\n            } else {\r\n                targetNode.getComponent(Item).showNumber(Number(targetNode.name));\r\n            }\r\n            this.content.removeChild(cloneNode);\r\n            cloneNode.removeFromParent();\r\n            cloneNode.destroy();\r\n        })));\r\n    }\r\n\r\n    /**\r\n     * 重新开始游戏\r\n     */\r\n    reSetGame() {\r\n        this.content.removeAllChildren();\r\n        this._sqrt = null;\r\n        this._sqrt2 = null;\r\n\r\n        this._score = 0;\r\n        this._step = 0;\r\n        this._clickFlag = true;\r\n        this.initGame();\r\n    }\r\n\r\n    /**\r\n     * 返回大厅\r\n     */\r\n    returnToHall() {\r\n        cc.director.loadScene(\"main\");\r\n    }\r\n\r\n}\r\n"]}